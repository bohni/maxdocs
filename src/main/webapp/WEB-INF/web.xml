<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">

	<display-name>MaxDocs</display-name>

	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<session-config>
		<session-timeout>15</session-timeout>
	</session-config>

	<jsp-config>
		<taglib>
			<taglib-uri>http://www.maxdocs.org/taglib</taglib-uri>
			<taglib-location>/WEB-INF/maxdocs.tld</taglib-location>
		</taglib>
	</jsp-config>


	<filter>
		<filter-name>EncodingFilter</filter-name>
		<filter-class>org.maxdocs.apache.catalina.filters.SetCharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>EncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- Apache Shiro Security filter -->
	<!-- The filter-name matches name of a 'shiroFilter' bean inside applicationContext.xml -->
	<filter>
		<filter-name>shiroFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<!-- Make sure any request you want accessible to Shiro is filtered. /* catches all -->
	<!-- requests.  Usually this filter mapping is defined first (before all others) to -->
	<!-- ensure that Shiro works in subsequent filters in the filter chain:             -->
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	
	<!-- prettyUrlFilter maps URLs to /content and /internal -->
	
	<filter>
	    <filter-name>prettyUrlFilter</filter-name>
	    <filter-class>org.maxdocs.servlet.MaxDocsFilter</filter-class>
	</filter>

	<filter-mapping>
	    <filter-name>prettyUrlFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- main MVC controller, mapped on /content -->
	
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.maxdocs.servlet.MaxDocsServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>		

	<servlet>
		<servlet-name>ajaxServlet</servlet-name>
		<servlet-class>org.maxdocs.servlet.MaxDocsAjaxServlet</servlet-class>
		<load-on-startup>2</load-on-startup>
	</servlet>		

	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/content/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>ajaxServlet</servlet-name>
		<url-pattern>/internal/ajax/*</url-pattern>
	</servlet-mapping>


	<!-- Location of the XML file that defines the root application context -->
	<!-- Applied by ContextLoaderListener. -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring-context.xml</param-value>
	</context-param>

	<!-- Loads the root application context of this web app at startup. -->
	<!-- The application context is then available via -->
	<!-- WebApplicationContextUtils.getWebApplicationContext(servletContext). -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>

</web-app>
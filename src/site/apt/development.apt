~~
~~ Copyright (c) 2011-2012, Team maxdocs.org
~~
~~ All rights reserved.
~~
~~ Redistribution and use in source and binary forms, with or without modification, are permitted provided
~~ that the following conditions are met:
~~
~~ 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the
~~    following disclaimer.
~~ 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and
~~    the following disclaimer in the documentation and/or other materials provided with the distribution.
~~ 3. The name of the author may not be used to endorse or promote products derived from this software
~~    without specific prior written permission.
~~
~~ THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
~~ NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
~~ DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
~~ EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
~~ SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
~~ LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
~~ ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
~~

 ------
 MaxDocs Entwicklung
 ------
 Team maxdocs.org
 ------
 2011-12-30
 
~~ Auf dieser Seite soll der Entwicklungsprozess dargestellt werden.
 
Entwicklung

* Allgemeines

 Die Entwicklung läuft auf github. Der Entwicklungsbranch ist develop. Das
 {{{http://nvie.com/posts/a-successful-git-branching-model/}Branching Model}} ist zu beachten!

* Issues

 Damit die Issues direkt in Eclipse bearbeitet werden können, kann über den Eclipse Marketplace
 der Github Mylyn Connector installiert werden.

* Entwicklungsumgebung

** Eclipse

 Bei der Entwicklung kommt die  {{http://www.eclipse.org/downloads/}Eclipse IDE for Java EE Developers}}
 zum Einsatz. Zusätzlich werden noch die Plugins von Maven (m2e) und Git (EGit) benötigt. Diese können 
 über den Eclipse Marketplace direkt in der IDE installiert werden.

** Maven

 Für den Standbau verrwendet MaxDocs {{{http://maven.apache.org}apache Maven}}.
 
** Git

 Die Versionierung erfolgt mit {{{http://www.git-scm.org}Git}} auf {{{http://www.github.com/bohni/maxdocs}github.com}}.
 
* Getting started

	* git installieren
	
		* git config --global user.name "John Doe"
		
		* git config --global user.email johndoe@example.com
		
		* Windows: git config --global core.autocrlf true
		
		* Mac/Unix : git config --global core.autocrlf input
	
	* Maven installieren
	
	* Eclipse installieren
	
		* Maven-Plugin m2e 
		
		* EGit
		
		* Preferences einstellen (alle "Muss" Einstellungen (UTF8, Linelength, etc.)

** Command line

	* Verzeichnis anlegen
	
	* git clone https://github.com/bohni/maxdocs.git (read-only)

	* git clone https://<user>@github.com/bohni/maxdocs.git (writable)
	
	* Eclipse: Import existing project

** Eclipse

	* File/New/Git/Git Repository
	
	* Paste Repository Path or URI: https://github.com/bohni/maxdocs.git
	
	* Git Repository View: Import projects
	
** Beide

	* Maven Dependencies ins lokale Repository aufnehmen (wikitext)
	
		* mvn install ...

* Tipps und Tricks

	* Auf Updates der Abhängigkeiten und Plugins prüfen: {{{http://mojo.codehaus.org/versions-maven-plugin/}Versions Maven Plugin}}

		* Plguins: mvn versions:display-plugin-updates

		* Abhängigkeiten: mvn versions:display-dependency-updates

	* License header in Dateien

		* prüfen: mvn validate license:check

		* generieren: mvn validate license:format

* nützliche Links

	* {{{http://nvie.com/posts/a-successful-git-branching-model/}Branching Model}}

	* {{{http://blog.code-adept.com/2008/01/25/unit-testing-jsp-custom-tags/}Unit Testing Custom Tags}}

	* {{{http://wiki.apache.org/tomcat/FAQ/CharacterEncoding}UTF-8 encoding mit Apache Tomcat}}
 
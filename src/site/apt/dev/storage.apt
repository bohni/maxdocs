 ------
 MaxDocs Storage
 ------
 Team maxdocs.org
 ------
 2013-01-06

~~ Hier wird das Storage-Interface und der FileStorage beschrieben

MaxDocs Storage

Storage

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
* Interface Storage

 MaxDocs bietet ein Interface zur Speicherung der Daten. Dadurch ist es möglich, verschiedene Backends
 für die Ablage der Seiten zu verwenden.

 Als Standard Storage-Provider ist eine datei-basierte Lösung implementiert. Der FileStorage wird über
 Spring konfiguriert. Hier wird das Verzeichnis zum Speichern der aktuellen Versionen und das zum 
 Speichern der historiesierten Inhalte angegeben. 

	* Storage liefert Linksliste für alle Seiten (wer verlink auf mich)\
	  Engine nutzt Linkliste für z.B. rename. Sie benutzt den Parser für 
	  geänderte Links und den Storage rein zum Speichern der geänderten Seiten.\
	  (neuer Ansatz: siehe {{{./engine.html}Engine}}  

	* Ursprungsversion beim Speichern prüfen, ob noch vorhanden oder bereits eine 
	  neuere Version gespeichert ist.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
* FileStorageProvider

	* alles unter einem User ist schlecht (Security)

	* chmod 777 ist keine Lösung (Security)

	* Problem 1: Entzippen als User, laufen als www -> Rechteprobleme

	* Lösungsansatz:

		* Binaries als "root", daten als www

		* Install anbieten -> Doku aus Jarfile lesen und als www schreiben

	* Alle Seiten werden auf dem Filesystem nur mit <lfdNr>.txt gespeichert (Security bezgl. /etc/passwd).
	  Die Seiten enthalten den PagePath als Metadaten\
	  Alle Seiten werden beim Start eingelesen in Liste/Map mit Zuordnung PagePath<->LfdNr

	* Versionierung erfolgt als <ContentFolder>/<VersionsFolder>/<LfdNr>/<Version>.txt

	* Laden von alten Versionen: Was passiert, wenn die gewünschte Version nicht existiert (Versionsnr. in URL manuell geändert)?

	* Light-Objekte für Versionshistorie

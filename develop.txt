TODO
- Storage (delete, rename, load version) ist Fleißarbeit
- Attachments, Web-Handling
- Security konzipieren

erledigte TODO
- Editieren, Showsource
- Parser TextileJ muss analysiert werden: Verwenden? Selber machen?

===============================================================
Schnittstellen für Plugins/Providers/etc:
- Versionierung mit OSGi, damit Drittanbieter auf geänderte 
  Schnittstellen reagieren können?

===============================================================
Storage
- Alles immer als UTF-8 behandeln, unabhängig vom System.
  http://wiki.apache.org/tomcat/FAQ/CharacterEncoding
  In web.xml der webapp als ersten Filter eintragen:
	<filter>
		<filter-name>EncodingFilter</filter-name>
		<filter-class>org.apache.catalina.filters.SetCharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>EncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

  In server.xml vom Tomcat:
  Bei den Connector-Tags: URIEncoding="UTF-8" hinzufügen
  In jsps:
  <%@ page contentType="text/html; charset=UTF-8" pageEncoding="UTF-8" %>
- Storage liefert Linksliste für alle Seiten (wer verlink auf mich)
- Engine nutzt Linkliste für z.B. rename. Sie benutzt den Parser für
  geänderte Links und den Storage rein zum Speichern der geänderten Seiten. 
- Ursprungsversion beim Speichern prüfen, ob noch vorhanden oder bereits eine 
  neuere Version gespeichert ist.

===============================================================
FileStorageProvider
- alles unter einem User ist schlecht (Security)
- chmod 777 ist keine Lösung (Security)
- Problem 1: Entzippen als User, laufen als www -> Rechteprobleme
- Lösungsansatz: Binaries als "root", daten als www
                 Install anbieten -> Doku aus Jarfile lesen und 
                 als www schreiben
Alle Seiten werden auf dem Filesystem nur mit <lfdNr>.txt gespeichert.
Die Seiten enthalten den PagePath als Metadaten
Alle Seiten werden beim Start eingelesen in Liste/Map mit Zuordnung PagePath<->LfdNr

Versionierung erfolgt als <ContentFolder>/<VersionsFolder>/<LfdNr>/<Version>.txt

===============================================================
Wo wird entwickelt?
- GitHub?
- Heimserver? HTTP? SSH? Gitolite? Gitblit?
=> Entwicklung läuft vorerst auf Github bohni/maxdocs
- Wie ist das bei Github mit evtl. User maxdocs?
- Einstellungen für git unter Windows (~/.gitconfig):
[core]
	autocrlf = true
===============================================================
Parser
- Nur für Syntax, lässt Plugin Auszeichnung unverändert

unterstützte Markups:
* Creole [http://www.wikicreole.org/wiki/Creole1.0] -> WikiText Incubator
* Jspwiki [http://www.jspwiki.org/wiki/TextFormattingRules]
* Textile [http://textile.thresholdstate.com/] -> TextileJ/WikiText
* Mediawiki [http://en.wikipedia.org/wiki/Help:Wiki_markup] -> TextileJ/WikiText
weitere Markups:
* Confluence -> TextileJ/WikiText
* Trac -> TextileJ/WikiText
* Markdown [http://daringfireball.net/projects/markdown/]
* reStructuredText [http://docutils.sourceforge.net/rst.html]

* [http://greensopinion.blogspot.com/2008/08/textile-j-is-moving-to-mylyn-wikitext.html].
  WikiText (Teil von Eclipse Mylyn) ist der Nachfolger von textile-j, siehe auch 
  [http://greensopinion.blogspot.com/search/label/WikiText]
  
* [http://wiki.eclipse.org/Mylyn/WikiText], [http://wiki.eclipse.org/Mylyn/FAQ#WikiText] Einstiegsseiten
  
* [http://help.eclipse.org/helios/index.jsp?topic=/org.eclipse.mylyn.wikitext.help.ui/help/devguide/WikiText%20Developer%20Guide.html]:
  Stand-alone usage of WikiText is also possible. To use WikiText outside of an Eclipse runtime, 
  simply add the WikiText jar files to your classpath. Note that stand-alone usage of WikiText is 
  limited to the use of the markup parser framework and Ant tasks.
  Add the org.eclipse.mylyn.wikitext.core*.jar to your classpath, and at least one the following 
  language-specific jars:
    org.eclipse.mylyn.wikitext.confluence.core*.jar
    org.eclipse.mylyn.wikitext.mediawiki.core*.jar
    org.eclipse.mylyn.wikitext.textile.core*.jar
    org.eclipse.mylyn.wikitext.tracwiki.core*.jar
    org.eclipse.mylyn.wikitext.twiki.core*.jar
    
* [http://wiki.eclipse.org/Mylyn/FAQ#What_wiki_markup_languages_does_WikiText_support.3F]
  WikiText unterstützt Confluence, MediaWiki, Textile, TracWiki, TWiki und Creole (Incubator) 

* [http://fusesource.com/forge/projects/wikitext] 
  A fork of the wikitext processors that are part of the Mylyn project at eclipse.
  
* git repositories:
  [http://dev.eclipse.org/git/org.eclipse.mylyn/org.eclipse.mylyn.git] Mylyn
  [http://git.eclipse.org/gitroot/mylyn/org.eclipse.mylyn.incubator.git] Mylyn Incubator
  
  
===============================================================
Plugins
- verarbeiten bereits geparsten Content

===============================================================
Engine
- Lesen
- Parsen
- Ausliefern
- Änderungen speichern
- Suchindex updaten
- Referenzen aktualisieren (siehe Storage)
- Locking
- etc.
- zweimal Parser aufrufen:
  erster Aufruf für Syntax
  zweiter Aufruf für Plugins 

- Attachments:
  Muessen von unserem Servlet verarbeitet werden wg. PrettyURL.
  exists() darf nicht nur true, sondern muss auch den Mimetype liefern (oder 
  zwei Methoden)

===============================================================
SearchProvider
 - Lucene / Solr

===============================================================
Templates
- Default mit Alles (Yaml)
- University: Simple als Start für Template-Entwickler
- Retro mit Bunt und Anim-Gif
- Dreckstool: grün-schwarz

- Pagetypes: Page (Wikiseite), Blog (Blog Homepage), Blogentry (Blogeintrag)
  - Page: Eine Wikiseite, die im "Wikistyle" angezeigt wird
  - Blog: Eine Wikiseite, die im Style "Blog" (z.B. mit Kalender) angezeigt wird. 
    Hier wird per Plugin die Stelle angegeben, wo die x letzten Blogeinträge kommen.
  - Blogentry: Ein Blogeintrag, der im Style "Blog" angezeigt wird.

- "AbstractPage" als Vorlage für die einzelnen Seiten - sitemesh?

===============================================================
Gallery
- Gallery nimmt als Attribut einen Pfad und bereitet daraus ein
  Album auf. Ggf. mit Ordnern zum navigieren
- Bilddarstellung mit Lightbox

===============================================================
Image
- inline, wenn als Link auf Attachment
  Aufgrund MimeType oder Endung?

===============================================================
Attachments
- MimeType?
- Endungen?

===============================================================
Sprache
- Wer gibt Sprache vor? Browser? Wiki-Besitzer? Server?
Browser: Ein Wiki mit rein deutschen Inhalten bekommt I18n-Wiki-Texte (Formulare, Buttons, etc)
Wiki-Besitzer: Alle Ausländer werden "ausgeschlossen"
Server: geht gar nicht, da normalerweise keinerlei Einfluss

- Lösungsansätze:
Browser: 
Nicht unterstützte Sprachen -> Default Locale
User kann Locale wählen (Dropdown), die dann im Cookie gespeichert wird.
Wiki verwendet nur Cookie-Locale (ggf. beim ersten Aufruf aus Browser-Locale übernommen)
Wiki-Besitzer könnte bei Installation die unterstützen Sprachen auswählen und nicht gewünschte weglassen

Wiki-Besitzer:
Wiki-Besitzer könnte bei Installation die unterstützen Sprachen auswählen und so auch mehrere unterstützen
Config: default-Locale einstellen und Browser-Locale erlauben(ja/nein)

